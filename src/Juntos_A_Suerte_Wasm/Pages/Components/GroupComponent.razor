@inject NotificationService notify
@inject NavigationManager Navigation
@inject TeamService teamService


<div class="card">
    <div class="card-body">

        <div class="form-check">
            <div class="mb-2">
                <InputCheckbox class="form-check-input" @bind-Value="isDeleteExisting" id="EliminarExistentes" />
                <label class="form-check-label" for="EliminarExistentes">Eliminar Grupos Existentes</label>
            </div>
            <div class="mb-2">
                <InputCheckbox class="form-check-input" @bind-Value="isSerialized" id="Serializar" />
                <label class="form-check-label" for="Serializar">Serializar (1,2...N)</label>
            </div>
            <div class="mb-2">
                <InputCheckbox class="form-check-input" @bind-Value="isNamePersonalized" @onchange="OnPersonalizedChange" id="PersonalizarNombre" />
                <label class="form-check-label" for="PersonalizarNombre">Nombre de Grupo Personalizado (Default: Grupo)</label>
            </div>
            <div class="mb-2">
                <InputCheckbox class="form-check-input" @bind-Value="isNameRandom" @onchange="OnRandomChange" id="NombreAleatorio" />
                <label class="form-check-label" for="NombreAleatorio">Nombre Aleatorio</label>
            </div>
        </div>
        <hr class="my-4" />
        <div class="mb-3">
            <label for="GroupCount" class="form-label">Cantidad de Grupos</label>
            <InputNumber id="GroupCount" class="form-control" min @bind-Value="GroupCount" />
        </div>

        @if (isNamePersonalized)
        {
            <div class="mb-3">
                <label for="NombrePersonalizado" class="form-label">Nombre Personalizado</label>
                <input type="text" id="NombrePersonalizado" @bind="NombrePersonalizado" class="form-control" />
            </div>
        }

    </div>

    <div class="card-footer align-content-around">
        <button type="button" class="btn btn-success" @onclick="CreateGroups">Crear Grupos</button>
        <button type="button" class="btn btn-danger" @onclick="DeleteAllGroups">Eliminar Grupos</button>
    </div>
</div>

@code {
    public bool isSerialized { get; set; } = true;
    public bool isNamePersonalized { get; set; } = false;
    public bool isDeleteExisting { get; set; } = false;
    public string? NombrePersonalizado { get; set; } = "";
    public bool isNameRandom { get; set; } = false;
    public int GroupCount { get; set; } = 1;


    List<Team> teams = new();

    private async Task Refresh()
    {
        teams = await teamService.GetTeamsAsync();
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }

    public async Task DeleteAllGroups()
    {
        foreach (var team in teams)
        {
            await teamService.DeleteTeamAsync(team.TeamId);
        }
        await Refresh();
        notify.ShowNotification(title: "Eliminacion de Grupos", message: "Se eliminaron todos los grupos", NotificationSeverity.Warning);
    }

    public async Task CreateGroups()
    {
        if (isDeleteExisting) // Eliminar grupos existentes
        {
            await DeleteAllGroups();
        }

        for (int i = 0; i < GroupCount; i++)
        {
            string? name = "Default";
            if (isSerialized)
            {
                name = isNamePersonalized ? $"{NombrePersonalizado} | #{teams.Count + 1}" : $"Grupo | #{teams.Count + 1}";
            }
            else
            {
                name = isNamePersonalized ? NombrePersonalizado : "Grupo";
            }

            await teamService.SaveAsync(name);
            await Refresh();
        }

        string inforesult = $"Nombre:<br/> {(isNamePersonalized ? NombrePersonalizado : "Grupo")}<br/> {(isSerialized ? "Con Serializacion" : "No Serializado")}";
        notify.ShowNotification(title: "Se crearon los grupos", message: inforesult, NotificationSeverity.Success);

    }

    private void OnPersonalizedChange(ChangeEventArgs e)
    {
        isNameRandom = false;
    }

    private void OnRandomChange(ChangeEventArgs e)
    {
        isNamePersonalized = false;
    }
}
