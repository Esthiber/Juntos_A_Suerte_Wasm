@inject NotificationService notify
@inject NavigationManager Navigation
@inject TeamService teamService

<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="col">
                <label for="NombrePersonalizado" class="form-label">Prefijo</label>
                <InputText id="NombrePersonalizado" @bind-value="prefijo" class="form-control row-cols-1"></InputText>

            </div>

            <div class="col">
                <label for="GroupCount" class="form-label">Cantidad</label>
                <InputNumber id="GroupCount" class="form-control row-cols-1" min @bind-Value="GroupCount" />
            </div>
        </div>


    </div>

    <div class="card-footer align-content-around">
        <button type="button" class="btn btn-success" @onclick="CreateGroups">Crear Grupos</button>
        <button type="button" class="btn btn-danger" @onclick="DeleteAllGroups">Eliminar Grupos</button>
    </div>
</div>

@code {
    public string? prefijo { get; set; } = "";
    public int GroupCount { get; set; } = 1;

    List<Team> teams = new();

    private async Task Refresh()
    {
        teams = await teamService.GetTeamsAsync();
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }

    public async Task DeleteAllGroups()
    {
        foreach (var team in teams)
        {
            await teamService.DeleteTeamAsync(team.TeamId);
        }
        await Refresh();
        notify.ShowNotification(title: "Eliminacion de Grupos", message: "Se eliminaron todos los grupos", NotificationSeverity.Success);
    }

    public async Task CreateGroups()
    {

        for (int i = 0; i < GroupCount; i++)
        {
            string? name;

            if (!string.IsNullOrEmpty(prefijo))
            {
                name = $"{prefijo} | #{teams.Count + 1}";
            }
            else // Predeterminado
            {
                name = $"Grupo | #{teams.Count + 1}";
            }

            await teamService.SaveAsync(name);
            await Refresh();
        }

        string inforesult = $"Prefijo:<br/> {prefijo}";
        notify.ShowNotification(title: "Se crearon los grupos", message: inforesult, NotificationSeverity.Success);
    }

}
